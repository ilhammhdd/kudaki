// Code generated by protoc-gen-go. DO NOT EDIT.
// source: aggregates/mountain/recommended_gear.proto

package mountain

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RecommendedGear struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string               `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserUuid             string               `protobuf:"bytes,3,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
	Mountain             *Mountain            `protobuf:"bytes,4,opt,name=mountain,proto3" json:"mountain,omitempty"`
	Upvote               int32                `protobuf:"varint,5,opt,name=upvote,proto3" json:"upvote,omitempty"`
	Downvote             int32                `protobuf:"varint,6,opt,name=downvote,proto3" json:"downvote,omitempty"`
	Seen                 int32                `protobuf:"varint,7,opt,name=seen,proto3" json:"seen,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RecommendedGear) Reset()         { *m = RecommendedGear{} }
func (m *RecommendedGear) String() string { return proto.CompactTextString(m) }
func (*RecommendedGear) ProtoMessage()    {}
func (*RecommendedGear) Descriptor() ([]byte, []int) {
	return fileDescriptor_50de5b97abeab0b3, []int{0}
}

func (m *RecommendedGear) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecommendedGear.Unmarshal(m, b)
}
func (m *RecommendedGear) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecommendedGear.Marshal(b, m, deterministic)
}
func (m *RecommendedGear) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecommendedGear.Merge(m, src)
}
func (m *RecommendedGear) XXX_Size() int {
	return xxx_messageInfo_RecommendedGear.Size(m)
}
func (m *RecommendedGear) XXX_DiscardUnknown() {
	xxx_messageInfo_RecommendedGear.DiscardUnknown(m)
}

var xxx_messageInfo_RecommendedGear proto.InternalMessageInfo

func (m *RecommendedGear) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RecommendedGear) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RecommendedGear) GetUserUuid() string {
	if m != nil {
		return m.UserUuid
	}
	return ""
}

func (m *RecommendedGear) GetMountain() *Mountain {
	if m != nil {
		return m.Mountain
	}
	return nil
}

func (m *RecommendedGear) GetUpvote() int32 {
	if m != nil {
		return m.Upvote
	}
	return 0
}

func (m *RecommendedGear) GetDownvote() int32 {
	if m != nil {
		return m.Downvote
	}
	return 0
}

func (m *RecommendedGear) GetSeen() int32 {
	if m != nil {
		return m.Seen
	}
	return 0
}

func (m *RecommendedGear) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*RecommendedGear)(nil), "aggregates.mountain.RecommendedGear")
}

func init() {
	proto.RegisterFile("aggregates/mountain/recommended_gear.proto", fileDescriptor_50de5b97abeab0b3)
}

var fileDescriptor_50de5b97abeab0b3 = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x4d, 0x4b, 0x03, 0x31,
	0x14, 0x64, 0xb7, 0x1f, 0x6e, 0x23, 0x28, 0x44, 0x90, 0x65, 0x45, 0x5c, 0x7a, 0x5a, 0x84, 0x26,
	0xa0, 0xa7, 0x1e, 0xf5, 0xe2, 0x41, 0x7a, 0x59, 0xf4, 0xe2, 0xa5, 0xa4, 0x9b, 0xd7, 0x6d, 0x68,
	0x93, 0x94, 0xe4, 0xa5, 0xfe, 0x0d, 0x7f, 0xb2, 0x34, 0xed, 0xb6, 0x97, 0xde, 0x66, 0xde, 0x4c,
	0xf2, 0x26, 0x13, 0xf2, 0x2c, 0xda, 0xd6, 0x41, 0x2b, 0x10, 0x3c, 0xd7, 0x36, 0x18, 0x14, 0xca,
	0x70, 0x07, 0x8d, 0xd5, 0x1a, 0x8c, 0x04, 0x39, 0x6f, 0x41, 0x38, 0xb6, 0x75, 0x16, 0x2d, 0xbd,
	0x3b, 0x7b, 0x59, 0xe7, 0x2d, 0xc6, 0x97, 0x2e, 0xe8, 0xc0, 0xe1, 0x60, 0xf1, 0xd4, 0x5a, 0xdb,
	0x6e, 0x80, 0x47, 0xb6, 0x08, 0x4b, 0x8e, 0x4a, 0x83, 0x47, 0xa1, 0xb7, 0x07, 0xc3, 0xf8, 0x2f,
	0x25, 0xb7, 0xf5, 0x79, 0xe9, 0x07, 0x08, 0x47, 0x6f, 0x48, 0xaa, 0x64, 0x9e, 0x94, 0x49, 0xd5,
	0xab, 0x53, 0x25, 0x29, 0x25, 0xfd, 0x10, 0x94, 0xcc, 0xd3, 0x32, 0xa9, 0x46, 0x75, 0xc4, 0xf4,
	0x81, 0x8c, 0x82, 0x07, 0x37, 0x8f, 0x42, 0x2f, 0x0a, 0xd9, 0x7e, 0xf0, 0xbd, 0x17, 0xa7, 0x24,
	0xeb, 0x72, 0xe4, 0xfd, 0x32, 0xa9, 0xae, 0x5f, 0x1e, 0xd9, 0x85, 0x17, 0xb0, 0xd9, 0x11, 0xd4,
	0x27, 0x3b, 0xbd, 0x27, 0xc3, 0xb0, 0xdd, 0x59, 0x84, 0x7c, 0x50, 0x26, 0xd5, 0xa0, 0x3e, 0x32,
	0x5a, 0x90, 0x4c, 0xda, 0x5f, 0x13, 0x95, 0x61, 0x54, 0x4e, 0x7c, 0x9f, 0xcf, 0x03, 0x98, 0xfc,
	0x2a, 0xce, 0x23, 0xa6, 0x53, 0x42, 0x1a, 0x07, 0x02, 0x41, 0xce, 0x05, 0xe6, 0x59, 0x0c, 0x51,
	0xb0, 0x43, 0x1b, 0xac, 0x6b, 0x83, 0x7d, 0x75, 0x6d, 0xd4, 0xa3, 0xa3, 0xfb, 0x0d, 0xdf, 0x67,
	0x3f, 0x9f, 0xad, 0xc2, 0x55, 0x58, 0xb0, 0xc6, 0x6a, 0xae, 0x36, 0x2b, 0xa1, 0xf5, 0x4a, 0x4a,
	0xbe, 0x0e, 0x52, 0xac, 0xd5, 0xc4, 0xa3, 0x75, 0xb0, 0x74, 0xd6, 0xe0, 0xc4, 0x83, 0xdb, 0xa9,
	0x06, 0x38, 0x18, 0x54, 0xa8, 0xc0, 0xf3, 0x0b, 0x3f, 0xb2, 0x18, 0xc6, 0x6d, 0xaf, 0xff, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xa3, 0xec, 0xbd, 0x54, 0xf0, 0x01, 0x00, 0x00,
}
